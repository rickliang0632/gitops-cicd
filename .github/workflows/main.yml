name: learn-github-actions
run-name: ${{ github.actor }} is learning GitHub Actions
on:
  push:
    branches:
    - main
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

jobs:
  mock-build:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Log level: $LEVEL"
          echo "Tags: $TAGS"
          echo "Environment: $ENVIRONMENT"
          echo "EventName: ${{ github.event_name }}"
        if: github.event_name != 'push'
        name: log-inputs
        env:
          LEVEL: ${{ inputs.logLevel }}
          TAGS: ${{ inputs.tags }}
          ENVIRONMENT: ${{ inputs.environment }}
      - run: |
          echo "EventName: ${{ github.event_name }}"
        name: log-push
        if: github.event_name == 'push'
  deploy-manul:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: deploy
        run: | 
          echo "Deployment for $ENVIRONMENT ... by ${{ github.event_name }} "
  deploy-auto-non-prod:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-tools/yaml-outputs@v2
        id: yaml
        with:
          file-path: 'cicd.yaml'
      - run: |
          echo "${{ steps.yaml.outputs.service_name }}"
          echo "${{ steps.yaml.outputs.deploy_environment }}"
          echo "${{ steps.yaml.outputs.test_environment }}"
      - name: deploy
        run: | 
          echo "Deployment non-prod ... by ${{ github.event_name }}"
          echo "Create PR into configuration repo and merge automatically"
  deploy-promote-prod:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: deploy
        run: | 
          echo "Deployment production ... by ${{ github.event_name }}"
          echo "Create PR into configuration repo and require review before merge"
