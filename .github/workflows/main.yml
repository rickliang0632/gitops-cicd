name: learn-github-actions
#run-name: ${{ github.actor }} is learning GitHub Actions
on:
  push:
    branches:
    - main
  workflow_dispatch:
    inputs:
      stacks:
        description: 'Deployment stacks'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - stack1
        - stack2
        - stack3
        - stack4
        - stack5
        - stack6
        - stack7
        - stack8
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

jobs:
  mock-build:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Stack: $STACK"
          echo "Tags: $TAGS"
          echo "Environment: $ENVIRONMENT"
          echo "EventName: ${{ github.event_name }}"
        if: github.event_name != 'push'
        name: log-inputs
        env:
          STACK: ${{ inputs.stacks }}
          TAGS: ${{ inputs.tags }}
          ENVIRONMENT: ${{ inputs.environment }}
      - run: |
          echo "EventName: ${{ github.event_name }}"
        name: log-push
        if: github.event_name == 'push'
  deploy-manul:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    needs: mock-build
    environment: ${{ inputs.environment }}
    steps:
      - name: deploy
        run: | 
          echo "Deployment for $ENVIRONMENT ... by ${{ github.event_name }} "
  deploy-auto-non-prod:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: mock-build
    steps:
      - uses: actions/checkout@v3
      - uses: actions-tools/yaml-outputs@v2
        id: yaml
        with:
          file-path: 'cicd.yaml'
      - run: |
          echo "${{ steps.yaml.outputs.service_name }}"
          echo "${{ steps.yaml.outputs.deployment_stacks }}"
          echo "${{ steps.yaml.outputs.test_phases }}"
    - name: Update Image Tag Values
      run: |
        new_image_tag=${{ github.sha }}
        workload_dir="workload"

        # Update the values.yaml file with the new image tag
        sed -i "s/^          image: gitops-cicd:*/          image: gitops-cicd:$new_image_tag/" "$workload_dir/$service_name/deployment.yaml"

    - name: Commit the changes made
      run: |
        git config --global user.name 'Rick Liang'
        git config --global user.email 'rickliang@seismic.com'
        git commit -am "updating image tag"
        git push
#      - name: deploy
#        run: |
#          echo "Deployment non-prod ... by ${{ github.event_name }}"
#          echo "Create PR into configuration repo and merge automatically"
  deploy-promote-prod:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: mock-build
    environment: production
    steps:
      - name: deploy
        run: | 
          echo "Deployment production ... by ${{ github.event_name }}"
          echo "Create PR into configuration repo and require review before merge"
